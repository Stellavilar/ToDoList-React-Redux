{"version":3,"sources":["redux/actions.js","components/ItemComponent.js","components/ListComponent.js","components/InputComponent.js","App.js","reportWebVitals.js","redux/states.js","redux/store.js","redux/reducer.js","index.js"],"names":["ADD_TODO","DELETE_TODO","UPDATE_TODO","ItemComponent","todo","dispatch","useDispatch","useState","edit","setEdit","name","setName","className","type","value","onChange","e","target","IconButton","onClick","payload","updateTodo","todoId","id","ListComponent","todos","useSelector","state","map","useStyles","makeStyles","theme","form","width","margin","padding","input","backgroundColor","InputComponent","classes","item","setItem","onSubmit","preventDefault","uuid","TextField","variant","required","fullWidth","placeholder","autoComplete","autoFocus","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","newTodos","action","push","filter","index","i","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.413cd5a4.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\nexport const DELETE_TODO = \"DELETE_TODO\";\nexport const UPDATE_TODO = \"UPDATE_TODO\";\n\n\nexport function addTodo(todo) {\n    return {\n        type: ADD_TODO,\n        payload: todo,\n    }\n};\n\nexport function deleteTodo(todoId) {\n    return {\n        type: DELETE_TODO,\n        payload: todoId,\n    }\n};\n\nexport function updateTodo(todo) {\n    return {\n        type: UPDATE_TODO,\n        payload: todo,\n    }\n};\n\n\n","import React, { useState } from 'react';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { IconButton } from '@material-ui/core';\nimport { deleteTodo, updateTodo } from '../redux/actions';\nimport { useDispatch } from 'react-redux';\n\nfunction ItemComponent({ todo }) {\n    //Use dispatch to get actions \n    const dispatch = useDispatch();\n    //Edit items\n    const [ edit, setEdit ] = useState(false);\n    //Change edit input\n    const [ name, setName ] = useState(todo.name);\n\n    return (\n        <div className=\"list\">\n            <div className=\"title-list\">\n                {edit ? <input type=\"text\" value={name} onChange={e => setName(e.target.value)} />: <div className=\"item\">{todo.name}</div> }\n            </div>\n            <div className=\"icons\">\n                <IconButton\n                onClick={() => {\n                    dispatch(updateTodo(\n                        {\n                            ...todo,\n                            name: name,\n                        }\n                    ))\n                    if(edit) {\n                        setName(todo.name);\n                    }\n                    setEdit(!edit);\n                }}\n                >\n                    {edit ? <CheckCircleIcon /> : <CreateIcon />}\n                </IconButton>\n                <IconButton\n                onClick={() => dispatch(deleteTodo(todo.id))}\n                >\n                    <DeleteIcon />                \n                </IconButton>   \n            </div>\n        </div>\n    )\n};\n\nexport default ItemComponent;","import React from 'react';\nimport ItemComponent from './ItemComponent';\nimport { useSelector } from 'react-redux';\n\nfunction ListComponent() {\n    //get todos items stored on states array\n    const todos = useSelector(state => state)\n    return (\n        <div className=\"items\">\n            {/* if there are todos on array show, if not, show null */}\n            {todos ? todos.map(todo => {\n                return <ItemComponent key={todo.id} todo={todo}/>\n            }) : null}\n        </div>\n    )\n};\n\nexport default ListComponent;","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {addTodo} from '../redux/actions';\nimport { useDispatch } from 'react-redux';\nimport { v1 as uuid } from 'uuid';\n\n//Styles for material ui components\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        width: '70%',\n        margin:'auto',\n        padding: '20px'\n      },\n      input: {\n          backgroundColor: 'white',\n      }\n    \n  }));\n\n\nfunction InputComponent () {\n    //Classes for material ui components\n    const classes = useStyles();\n    //Use dispatch to get actions\n    const dispatch = useDispatch();\n    //input value hook\n    const [ item, setItem ] = useState('');\n\n    return (\n        <div className=\"input-part\">\n            <form\n                className={classes.form} \n                onSubmit={e =>{ \n                    e.preventDefault();\n                    dispatch(addTodo(\n                        {\n                            id: uuid(),\n                            name: item\n                        }\n                ))\n                setItem('');\n            }}\n            >\n                <TextField\n                    className={classes.input}\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"todo\"\n                    placeholder=\"Ajouter une tÃ¢che\"\n                    name=\"todo\"\n                    autoComplete=\"todo\"\n                    autoFocus\n                    value={item}\n                    onChange={e => setItem(e.target.value)}\n                />\n            </form>\n        </div>\n    )\n};\n\nexport default InputComponent;","import './index.scss';\nimport ListComponent from './components/ListComponent';\nimport InputComponent from './components/InputComponent';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1>To Do List App</h1>\n      <InputComponent />\n      <ListComponent />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//Array of todo items\nexport const todos = [];","import {createStore} from 'redux';\nimport {reducer} from './reducer';\n\nexport const store = createStore(reducer);","/* eslint-disable default-case */\nimport { ADD_TODO, UPDATE_TODO, DELETE_TODO } from './actions';\nimport  {todos}  from './states'\n\nexport const reducer = (state = todos, action) => {\n    let newTodos;\n    switch (action.type) {\n        /**When submit input, add todo into array and show them on list */\n        case ADD_TODO:\n            newTodos = [...state];\n            newTodos.push(action.payload);\n            return newTodos;\n            /**When delete todo, filter todos array to remove element*/\n        case DELETE_TODO:\n            newTodos = [...state];\n            newTodos = newTodos.filter(todo=> todo.id !== action.payload)\n            return newTodos;\n        case UPDATE_TODO:\n            newTodos = [...state];\n            let index = -1;\n            for( let i = 0; i < newTodos.length; i++ ) {\n                index++;\n                if(newTodos[i].id === action.payload.id) {\n                    break;\n                }\n            }\n            if (index !== -1) {\n                newTodos[index] = action.payload;\n                return newTodos;\n            }\n        return state;\n    }\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport {store} from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}